{"version":3,"sources":["../../../projects/ng-go-top-button/src/lib/ng-go-top-button.component.ts","../../../projects/ng-go-top-button/src/lib/ng-go-top-button.module.ts"],"names":["NgGoTopButtonComponent","this","animationState","timerID","scrollDistance","styles","classNames","animate","speed","acceleration","tabIndex","prototype","ngOnInit","validateInputs","errorMessagePrefix","Error","onWindowScroll","isBrowser","getCurrentScrollTop","scrollTop","event","preventDefault","animateScrollTop","window","scrollTo","_this","initialSpeed","setInterval","scrollBy","clearInterval","scrollY","pageYOffset","document","body","documentElement","getStyle","Component","args","selector","template","encapsulation","ViewEncapsulation","None","animations","trigger","state","style","opacity","transition","Input","HostListener","NgModule","imports","CommonModule","declarations","exports"],"mappings":"sdAGA,SAAAA,IAsDEC,KAAAC,eAAiB,MACTD,KAAAE,QAAe,KAKdF,KAAAG,eAAiB,IAKjBH,KAAAI,OAAc,GAKdJ,KAAAK,WAAa,gBAKbL,KAAAM,SAAU,EAKVN,KAAAO,MAAQ,GAKRP,KAAAQ,aAAe,EAKfR,KAAAS,SAAW,SAEpBV,EAAAW,UAAAC,SAAA,WACEX,KAAKY,kBAGCb,EAAAW,UAAAE,eAAA,WACN,IAAMC,EAAqB,iDAE3B,GAAIb,KAAKG,eAAiB,EACxB,MAAMW,MAAMD,EAAqB,4DAGnC,GAAIb,KAAKO,MAAQ,EACf,MAAMO,MAAMD,EAAqB,+CAGnC,GAAIb,KAAKQ,aAAe,EACtB,MAAMM,MAAMD,EAAqB,0DAGnC,GAA+B,iBAApBb,KAAKK,WACd,MAAMS,MAAMD,EAAqB,wEAQrCd,EAAAW,UAAAK,eAAA,WACMf,KAAKgB,cACPhB,KAAKC,eAAiBD,KAAKiB,sBAAwBjB,KAAKG,eAAiB,KAAO,QAOpFJ,EAAAW,UAAAQ,UAAA,SAAUC,GACHnB,KAAKgB,cAIVG,EAAMC,iBACFpB,KAAKM,QACPN,KAAKqB,mBAELC,OAAOC,SAAS,EAAG,KAOvBxB,EAAAW,UAAAW,iBAAA,WAAA,IAAAG,EAAAxB,KACE,GAAqB,OAAjBA,KAAKE,QAAT,CAIA,IAAIuB,EAAezB,KAAKO,MAExBP,KAAKE,QAAUwB,aAAY,WACzBJ,OAAOK,SAAS,GAAIF,GACpBA,GAA8BD,EAAKhB,aACA,IAA/BgB,EAAKP,wBACPW,cAAcJ,EAAKtB,SACnBsB,EAAKtB,QAAU,QAEhB,MAMLH,EAAAW,UAAAO,oBAAA,WACE,YAA8B,IAAnBK,OAAOO,SAA2BP,OAAOO,SAAW,EACtDP,OAAOO,aAGkB,IAAvBP,OAAOQ,aAA+BR,OAAOQ,aAAe,EAC9DR,OAAOQ,iBAGuB,IAA5BC,SAASC,KAAKd,WAA6Ba,SAASC,KAAKd,WAAa,EACxEa,SAASC,KAAKd,eAG2B,IAAvCa,SAASE,gBAAgBf,WAA6Ba,SAASE,gBAAgBf,WAAa,EAC9Fa,SAASE,gBAAgBf,UAG3B,GAMTnB,EAAAW,UAAAwB,SAAA,WACE,OAAOlC,KAAKI,QAAU,IAOxBL,EAAAW,UAAAM,UAAA,WACE,MAA2B,oBAApB,iCArMVmB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,+SASVC,cAAeC,EAAAA,kBAAkBC,KAyBjCC,WAAY,CACVC,EAAAA,QAAQ,cAAe,CACrBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAChBC,QAAS,UAEXF,EAAAA,MAAM,MAAOC,EAAAA,MAAM,CACjBC,QAAS,OAEXC,EAAAA,WAAW,YAAazC,EAAAA,QAAQ,sBAChCyC,EAAAA,WAAW,YAAazC,EAAAA,QAAQ,iCAhChC,qjBA+CH0C,EAAAA,sBAKAA,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,qBAKAA,EAAAA,4BAKAA,EAAAA,wBAKAA,EAAAA,8BA6BAC,EAAAA,aAAYb,KAAA,CAAC,gBAAiB,aChHjC,iCANCc,EAAAA,SAAQd,KAAA,CAAC,CACRe,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACtD,GACfuD,QAAS,CAACvD","sourcesContent":["import {Component, HostListener, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {trigger, state, style, transition, animate} from '@angular/animations';\n\n@Component({\n  selector: 'ng-go-top-button', // tslint:disable-line\n  template: `\n    <button type=\"button\" aria-label=\"go to top of page\"\n            [tabIndex]=\"tabIndex\"\n            [@appearInOut]=\"animationState\"\n            (click)=\"scrollTop($event)\"\n            [ngStyle]=\"getStyle()\"\n            [ngClass]=\"classNames\">\n      <ng-content></ng-content>\n    </button>`,\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n      `.go-top-button {\n      position: fixed;\n      cursor: pointer;\n      outline: none;\n      top: 50%;\n      bottom: 50%;\n      right: 0;\n      width: 35px;\n      height: 35px;\n      line-height: 35px;\n      text-decoration: none;\n      color: #ffffff;\n      background: rgba(0, 0, 0, 0.3);\n      border: none;\n      border-radius: 3px 0 0 3px;\n    }\n\n    .go-top-button:hover, .go-top-button:focus {\n      background-color: rgba(0, 0, 0, 0.6);\n      text-decoration: none;\n      color: white;\n    }`\n  ],\n  animations: [\n    trigger('appearInOut', [\n      state('in', style({\n        opacity: '0.85'\n      })),\n      state('out', style({\n        opacity: '0'\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ]),\n  ],\n})\n\n/**\n * Component for adding a go-to-top button to scrollable browser content\n */\nexport class NgGoTopButtonComponent implements OnInit {\n  animationState = 'out';\n  private timerID: any = null;\n\n  /**\n   * Go top button will appear when user scrolls Y to this position\n   */\n  @Input() scrollDistance = 200;\n\n  /**\n   * User styles config object\n   */\n  @Input() styles: any = {};\n\n  /**\n   * Classes to be applied to the button\n   */\n  @Input() classNames = 'go-top-button';\n\n  /**\n   * If true scrolling to top will be animated\n   */\n  @Input() animate = false;\n\n  /**\n   * Animated scrolling speed\n   */\n  @Input() speed = 80;\n\n  /**\n   * Acceleration coefficient, added to speed when using animated scroll\n   */\n  @Input() acceleration = 0;\n\n  /**\n   * Button tabIndex HTML attribute\n   */\n  @Input() tabIndex = 0;\n\n  ngOnInit() {\n    this.validateInputs();\n  }\n\n  private validateInputs() {\n    const errorMessagePrefix = 'GoTopButton component input validation error: ';\n\n    if (this.scrollDistance < 0) {\n      throw Error(errorMessagePrefix + '\\'scrollDistance\\' parameter must be greater or equal to 0');\n    }\n\n    if (this.speed < 1) {\n      throw Error(errorMessagePrefix + '\\'speed\\' parameter must be a positive number');\n    }\n\n    if (this.acceleration < 0) {\n      throw Error(errorMessagePrefix + '\\'acceleration\\' parameter must be greater or equal to 0');\n    }\n\n    if (typeof this.classNames !== 'string') {\n      throw Error(errorMessagePrefix + '\\'classNames\\' parameter must be a string like \\'class1 class2 class3\\'');\n    }\n  }\n\n  /**\n   * Listens to window scroll and animates the button\n   */\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    if (this.isBrowser()) {\n      this.animationState = this.getCurrentScrollTop() > this.scrollDistance ? 'in' : 'out';\n    }\n  }\n\n  /**\n   * Scrolls window to top\n   */\n  scrollTop(event: any) {\n    if (!this.isBrowser()) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.animate) {\n      this.animateScrollTop();\n    } else {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  /**\n   * Performs the animated scroll to top\n   */\n  animateScrollTop() {\n    if (this.timerID !== null) {\n      return;\n    }\n\n    let initialSpeed = this.speed;\n\n    this.timerID = setInterval(() => {\n      window.scrollBy(0, -initialSpeed);\n      initialSpeed = initialSpeed + this.acceleration;\n      if (this.getCurrentScrollTop() === 0) {\n        clearInterval(this.timerID);\n        this.timerID = null;\n      }\n    }, 15);\n  }\n\n  /**\n   * Get current Y scroll position\n   */\n  getCurrentScrollTop() {\n    if (typeof window.scrollY !== 'undefined' && window.scrollY >= 0) {\n      return window.scrollY;\n    }\n\n    if (typeof window.pageYOffset !== 'undefined' && window.pageYOffset >= 0) {\n      return window.pageYOffset;\n    }\n\n    if (typeof document.body.scrollTop !== 'undefined' && document.body.scrollTop >= 0) {\n      return document.body.scrollTop;\n    }\n\n    if (typeof document.documentElement.scrollTop !== 'undefined' && document.documentElement.scrollTop >= 0) {\n      return document.documentElement.scrollTop;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get button style\n   */\n  getStyle() {\n    return this.styles || {};\n  }\n\n  /**\n   * This check will prevent 'window' logic to be executed\n   * while executing the server rendering\n   */\n  isBrowser(): boolean {\n    return typeof (window) !== 'undefined';\n  }\n}\n","import {NgGoTopButtonComponent} from './ng-go-top-button.component';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgGoTopButtonComponent],\n  exports: [NgGoTopButtonComponent]\n})\n\nexport class GoTopButtonModule {\n}\n"]}