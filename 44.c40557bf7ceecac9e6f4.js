(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{"1XF9":function(b,d,t){"use strict";t.r(d),t.d(d,"L6Module",function(){return i});var c=t("ofXK"),e=t("tyNb"),r=t("fXoL"),a=t("8wfc"),J=t("V+4I");const K=[{path:"",component:(()=>{class b{constructor(){}ngOnInit(){}}return b.\u0275fac=function(d){return new(d||b)},b.\u0275cmp=r.zb({type:b,selectors:[["app-l6"]],decls:918,vars:0,consts:[[1,"containercss"],["id","item-leftbox",1,"item1"],[1,"item2"],["id","item2-div-1",1,"item2-div"],["routerLink","/Home",1,"bi","bi-house","svgcss",2,"float","left","margin-left","20px"],["data-bs-toggle","offcanvas","href","#offcanvasExample","role","button","aria-controls","offcanvasExample",1,"bi","bi-list","svgcss",2,"float","right","margin-right","15px"],["tabindex","-1","id","offcanvasExample","aria-labelledby","offcanvasExampleLabel",1,"offcanvas","offcanvas-start"],[1,"item2-div"],["id","titlepadding"],[1,"codepadding"],["type","circle"],[1,"tablecss"],[1,"table","table-bordered","border-primary"],[1,"atn"],[2,"padding-left","20px"],[1,"codebox"],[1,"atv"],[1,"str"],[1,"pun"],[1,"pln"],[1,"dec"],[1,"tag"]],template:function(b,d){if(1&b){r.Kb(0,"div",0),r.Kb(1,"div",1),r.Gb(2,"app-desktop-nav"),r.Jb(),r.Kb(3,"div",2),r.Kb(4,"div",3),r.Gb(5,"i",4),r.dc(6," Operators "),r.Gb(7,"a",5),r.Jb(),r.Kb(8,"div",6),r.Gb(9,"app-mobile-nav"),r.Jb(),r.Kb(10,"div",7),r.Kb(11,"h3",8),r.dc(12,"Operators:"),r.Jb(),r.Kb(13,"div",9),r.Kb(14,"ol"),r.Kb(15,"li"),r.dc(16," Operators are used to perform operations on variables and values . "),r.Jb(),r.Kb(17,"li"),r.dc(18," For example "),r.Kb(19,"b"),r.dc(20,"+ , - , * "),r.Jb(),r.dc(21,"and "),r.Kb(22,"b"),r.dc(23,"/"),r.Jb(),r.dc(24," are used for performing arithmatic operation. "),r.Jb(),r.Kb(25,"li"),r.dc(26," Python divides the operators in the following groups: "),r.Kb(27,"ul",10),r.Kb(28,"li"),r.dc(29,"Arithmetic Operators"),r.Jb(),r.Kb(30,"li"),r.dc(31,"Comparison Operators"),r.Jb(),r.Kb(32,"li"),r.dc(33,"Logical Operators"),r.Jb(),r.Kb(34,"li"),r.dc(35,"Bitwise Operators"),r.Jb(),r.Kb(36,"li"),r.dc(37,"Assignment Operators"),r.Jb(),r.Kb(38,"li"),r.dc(39,"Membership Operators"),r.Jb(),r.Kb(40,"li"),r.dc(41,"Identity Operators"),r.Jb(),r.Kb(42,"li"),r.dc(43,"Modulus Operators"),r.Jb(),r.Kb(44,"li"),r.dc(45,"String Operators"),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(46,"div",7),r.Kb(47,"h3",8),r.dc(48,"1. Arithmetic Operators:"),r.Jb(),r.Kb(49,"p"),r.dc(50," Arithmetic operators are used with numeric values to perform common mathematical operations "),r.Jb(),r.Kb(51,"div",11),r.Kb(52,"table",12),r.Kb(53,"tbody"),r.Kb(54,"tr"),r.Kb(55,"th"),r.dc(56,"Sr. No."),r.Jb(),r.Kb(57,"th"),r.dc(58,"Operators"),r.Jb(),r.Kb(59,"th"),r.dc(60,"Meaning"),r.Jb(),r.Kb(61,"th"),r.dc(62,"Example"),r.Jb(),r.Jb(),r.Kb(63,"tr"),r.Kb(64,"td"),r.dc(65,"1"),r.Jb(),r.Kb(66,"td"),r.dc(67,"+"),r.Jb(),r.Kb(68,"td"),r.dc(69," Addition operator is used for performing addition of two numbers "),r.Jb(),r.Kb(70,"td"),r.dc(71,"10+20=30"),r.Jb(),r.Jb(),r.Kb(72,"tr"),r.Kb(73,"td"),r.dc(74,"2"),r.Jb(),r.Kb(75,"td"),r.dc(76,"-"),r.Jb(),r.Kb(77,"td"),r.dc(78,"Subtraction operator is used for performing subtraction"),r.Jb(),r.Kb(79,"td"),r.dc(80,"20-10=10"),r.Jb(),r.Jb(),r.Kb(81,"tr"),r.Kb(82,"td"),r.dc(83,"3"),r.Jb(),r.Kb(84,"td"),r.dc(85,"*"),r.Jb(),r.Kb(86,"td"),r.dc(87," Multiplication operator is used for performing multiplication "),r.Jb(),r.Kb(88,"td"),r.dc(89,"20*10=200"),r.Jb(),r.Jb(),r.Kb(90,"tr"),r.Kb(91,"td"),r.dc(92,"4"),r.Jb(),r.Kb(93,"td"),r.dc(94,"/"),r.Jb(),r.Kb(95,"td"),r.dc(96," Division operator is used for performing division of two numbers "),r.Jb(),r.Kb(97,"td"),r.dc(98,"20/10=2"),r.Jb(),r.Jb(),r.Kb(99,"tr"),r.Kb(100,"td"),r.dc(101,"5"),r.Jb(),r.Kb(102,"td"),r.dc(103,"%"),r.Jb(),r.Kb(104,"td"),r.dc(105,"Mod operator returns the remainder value"),r.Jb(),r.Kb(106,"td"),r.dc(107,"10%2=0"),r.Jb(),r.Jb(),r.Kb(108,"tr"),r.Kb(109,"td"),r.dc(110,"6"),r.Jb(),r.Kb(111,"td"),r.dc(112,"**"),r.Jb(),r.Kb(113,"td"),r.dc(114,"This is an exponentiation operator(power)"),r.Jb(),r.Kb(115,"td"),r.dc(116,"2**3=8"),r.Jb(),r.Jb(),r.Kb(117,"tr"),r.Kb(118,"td"),r.dc(119,"7"),r.Jb(),r.Kb(120,"td"),r.dc(121,"//"),r.Jb(),r.Kb(122,"td"),r.dc(123," This is floor division operator. In this operation the result is the quotient in which the digits after the decimal point are removed "),r.Jb(),r.Kb(124,"td"),r.dc(125,"10//3=3"),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(126,"div",7),r.Kb(127,"h3",8),r.dc(128,"2. Comparision Operators:"),r.Jb(),r.Kb(129,"p"),r.dc(130,"Comparision operators are used to compare two values:"),r.Jb(),r.Kb(131,"div",11),r.Kb(132,"table",12),r.Kb(133,"tbody"),r.Kb(134,"tr"),r.Kb(135,"th"),r.dc(136,"Sr.No."),r.Jb(),r.Kb(137,"th"),r.dc(138,"Operators"),r.Jb(),r.Kb(139,"th"),r.dc(140,"Meaning"),r.Jb(),r.Kb(141,"th"),r.dc(142,"Example"),r.Jb(),r.Jb(),r.Kb(143,"tr"),r.Kb(144,"td"),r.dc(145,"1"),r.Jb(),r.Kb(146,"td"),r.dc(147,"=="),r.Jb(),r.Kb(148,"td"),r.dc(149,"If two values are equal then condition becomes true"),r.Jb(),r.Kb(150,"td"),r.dc(151,"10==20"),r.Gb(152,"br"),r.dc(153,"False"),r.Jb(),r.Jb(),r.Kb(154,"tr"),r.Kb(155,"td"),r.dc(156,"2"),r.Jb(),r.Kb(157,"td"),r.dc(158,"!="),r.Jb(),r.Kb(159,"td"),r.dc(160," If two operands are not equal then the condition becomes true "),r.Jb(),r.Kb(161,"td"),r.dc(162,"20!=10 "),r.Gb(163,"br"),r.dc(164,"True"),r.Jb(),r.Jb(),r.Kb(165,"tr"),r.Kb(166,"td"),r.dc(167,"3"),r.Jb(),r.Kb(168,"td"),r.dc(169,"<>"),r.Jb(),r.Kb(170,"td"),r.dc(171," This is similar to "),r.Kb(172,"b"),r.dc(173,"!="),r.Jb(),r.dc(174," That means if two values are not equal then it return true "),r.Jb(),r.Kb(175,"td"),r.dc(176,"20<>10 "),r.Gb(177,"br"),r.dc(178,"True"),r.Jb(),r.Jb(),r.Kb(179,"tr"),r.Kb(180,"td"),r.dc(181,"4"),r.Jb(),r.Kb(182,"td"),r.dc(183,"<"),r.Jb(),r.Kb(184,"td"),r.dc(185," This is less than operator. If left operand is less than the right operator then the return value is true "),r.Jb(),r.Kb(186,"td"),r.dc(187,"20<10"),r.Gb(188,"br"),r.dc(189,"False"),r.Jb(),r.Jb(),r.Kb(190,"tr"),r.Kb(191,"td"),r.dc(192,"5"),r.Jb(),r.Kb(193,"td"),r.dc(194,">"),r.Jb(),r.Kb(195,"td"),r.dc(196," This is greater than operator. If left operand is greater than the right operator then the return value is true "),r.Jb(),r.Kb(197,"td"),r.dc(198,"20>10 "),r.Gb(199,"br"),r.dc(200,"True"),r.Jb(),r.Jb(),r.Kb(201,"tr"),r.Kb(202,"td"),r.dc(203,"6"),r.Jb(),r.Kb(204,"td"),r.dc(205,"<="),r.Jb(),r.Kb(206,"td"),r.dc(207," This is less than equal to operator. If left operand is less than the right operator or equal to right operator then the return value is true "),r.Jb(),r.Kb(208,"td"),r.dc(209," 10<=10"),r.Gb(210,"br"),r.dc(211," True "),r.Jb(),r.Jb(),r.Kb(212,"tr"),r.Kb(213,"td"),r.dc(214,"7"),r.Jb(),r.Kb(215,"td"),r.dc(216,">="),r.Jb(),r.Kb(217,"td"),r.dc(218," This is greater than equal to operator. If left operand is greater than the right operator or equal to right operator then the return value is true "),r.Jb(),r.Kb(219,"td"),r.dc(220," 20<=10"),r.Gb(221,"br"),r.dc(222," True "),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(223,"div",7),r.Kb(224,"h3",8),r.dc(225,"3. Logical Operators:"),r.Jb(),r.Kb(226,"div",9),r.Kb(227,"p"),r.dc(228,"Logical operators are used to combine conditional statements:"),r.Jb(),r.Jb(),r.Kb(229,"div",11),r.Kb(230,"table",12),r.Kb(231,"tbody"),r.Kb(232,"tr"),r.Kb(233,"th"),r.dc(234,"Sr. No."),r.Jb(),r.Kb(235,"th"),r.dc(236,"Operators"),r.Jb(),r.Kb(237,"th"),r.dc(238,"Meaning"),r.Jb(),r.Kb(239,"th"),r.dc(240,"Example"),r.Jb(),r.Jb(),r.Kb(241,"tr"),r.Kb(242,"td"),r.dc(243,"1"),r.Jb(),r.Kb(244,"td"),r.dc(245,"and"),r.Jb(),r.Kb(246,"td"),r.dc(247," If both the operands are true then the entire expression is true "),r.Jb(),r.Kb(248,"td"),r.dc(249," a=5 "),r.Gb(250,"br"),r.dc(251," a>2 and a< 3"),r.Gb(252,"br"),r.dc(253,"False "),r.Jb(),r.Jb(),r.Kb(254,"tr"),r.Kb(255,"td"),r.dc(256,"2"),r.Jb(),r.Kb(257,"td"),r.dc(258,"or"),r.Jb(),r.Kb(259,"td"),r.dc(260,"If either first or second operand is true"),r.Jb(),r.Kb(261,"td"),r.dc(262," a=5 "),r.Gb(263,"br"),r.dc(264," a>2 and a< 3"),r.Gb(265,"br"),r.dc(266,"True "),r.Jb(),r.Jb(),r.Kb(267,"tr"),r.Kb(268,"td"),r.dc(269,"3"),r.Jb(),r.Kb(270,"td"),r.dc(271,"not"),r.Jb(),r.Kb(272,"td"),r.dc(273," If the operand is false then the entire expression is true "),r.Jb(),r.Kb(274,"td"),r.dc(275,"a=5 "),r.Gb(276,"br"),r.dc(277,"not (a>2 and a< 3)"),r.Gb(278,"br"),r.dc(279,"True"),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(280,"div",7),r.Kb(281,"h3",8),r.dc(282,"4. Bitwise Operators:"),r.Jb(),r.Kb(283,"div",9),r.Kb(284,"ul"),r.Kb(285,"li"),r.dc(286,"Bitwise operators are used to compare (binary) numbers:"),r.Jb(),r.Kb(287,"li"),r.dc(288," In the table below: "),r.Kb(289,"ul"),r.Kb(290,"li"),r.dc(291,"a=010 (in binary)"),r.Jb(),r.Kb(292,"li"),r.dc(293,"b=011 (in binary)"),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(294,"div",11),r.Kb(295,"table",12),r.Kb(296,"tbody"),r.Kb(297,"tr"),r.Kb(298,"th"),r.dc(299,"Sr. No."),r.Jb(),r.Kb(300,"th"),r.dc(301,"Operators"),r.Jb(),r.Kb(302,"th"),r.dc(303,"Name"),r.Jb(),r.Kb(304,"th"),r.dc(305,"Meaning"),r.Jb(),r.Kb(306,"th"),r.dc(307,"Example"),r.Jb(),r.Jb(),r.Kb(308,"tr"),r.Kb(309,"td"),r.dc(310,"1"),r.Jb(),r.Kb(311,"td"),r.dc(312,"&"),r.Jb(),r.Kb(313,"td"),r.dc(314,"AND"),r.Jb(),r.Kb(315,"td"),r.dc(316,"returns 1 if both the bits is 1 ."),r.Jb(),r.Kb(317,"td"),r.dc(318,"a&b=010"),r.Jb(),r.Jb(),r.Kb(319,"tr"),r.Kb(320,"td"),r.dc(321,"2"),r.Jb(),r.Kb(322,"td"),r.dc(323,"|"),r.Jb(),r.Kb(324,"td"),r.dc(325,"OR"),r.Jb(),r.Kb(326,"td"),r.dc(327,"return 1 if one of two bits is 1."),r.Jb(),r.Kb(328,"td"),r.dc(329,"a|b=011"),r.Jb(),r.Jb(),r.Kb(330,"tr"),r.Kb(331,"td"),r.dc(332,"3"),r.Jb(),r.Kb(333,"td"),r.dc(334,"~"),r.Jb(),r.Kb(335,"td"),r.dc(336,"NOT"),r.Jb(),r.Kb(337,"td"),r.dc(338,"Inverts all the bits."),r.Jb(),r.Kb(339,"td"),r.dc(340,"~a=101"),r.Jb(),r.Jb(),r.Kb(341,"tr"),r.Kb(342,"td"),r.dc(343,"4"),r.Jb(),r.Kb(344,"td"),r.dc(345,"^"),r.Jb(),r.Kb(346,"td"),r.dc(347,"XOR"),r.Jb(),r.Kb(348,"td"),r.dc(349,"return 1 if only one of two bits is 1"),r.Jb(),r.Kb(350,"td"),r.dc(351,"a ^ b=001"),r.Jb(),r.Jb(),r.Kb(352,"tr"),r.Kb(353,"td"),r.dc(354,"5"),r.Jb(),r.Kb(355,"td"),r.dc(356,"<<"),r.Jb(),r.Kb(357,"td"),r.dc(358,"Zero fill left shift"),r.Jb(),r.Kb(359,"td"),r.dc(360," Shifts the bits of the number to the left and fills 0 on void left as a result "),r.Jb(),r.Kb(361,"td"),r.dc(362," a<<1=100 "),r.Gb(363,"br"),r.dc(364,"Note:"),r.Kb(365,"span",13),r.dc(366,"<<1"),r.Jb(),r.dc(367," means make left by one position and add a tailing zero"),r.Gb(368,"br"),r.dc(369," here a=010 after left shift it becomes 100 "),r.Jb(),r.Jb(),r.Kb(370,"tr"),r.Kb(371,"td"),r.dc(372,"6"),r.Jb(),r.Kb(373,"td"),r.dc(374,">>"),r.Jb(),r.Kb(375,"td"),r.dc(376,"Signed right shift"),r.Jb(),r.Kb(377,"td"),r.dc(378," Shifts the bits of the number to the right and fills 0 on void left as a result "),r.Jb(),r.Kb(379,"td"),r.dc(380," a>>1=001"),r.Gb(381,"br"),r.dc(382,"Note:"),r.Kb(383,"span",13),r.dc(384,">>1"),r.Jb(),r.dc(385," means make right shift by one position and add a tailing zero "),r.Gb(386,"br"),r.dc(387,"here a=010 after left shift it becomes 001 "),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(388,"div",7),r.Kb(389,"h3",8),r.dc(390,"5. Assignment Operators:"),r.Jb(),r.Kb(391,"p",14),r.dc(392," Arithmetic operators are used to assign the values to variables "),r.Jb(),r.Kb(393,"div",11),r.Kb(394,"table",12),r.Kb(395,"tbody"),r.Kb(396,"tr"),r.Kb(397,"th"),r.dc(398,"Sr. No."),r.Jb(),r.Kb(399,"th"),r.dc(400,"Operators"),r.Jb(),r.Kb(401,"th"),r.dc(402,"Example"),r.Jb(),r.Kb(403,"th"),r.dc(404,"Same As"),r.Jb(),r.Jb(),r.Kb(405,"tr"),r.Kb(406,"td"),r.dc(407,"1"),r.Jb(),r.Kb(408,"td"),r.dc(409,"="),r.Jb(),r.Kb(410,"td"),r.dc(411,"a=5"),r.Jb(),r.Kb(412,"td"),r.dc(413,"a=5"),r.Jb(),r.Jb(),r.Kb(414,"tr"),r.Kb(415,"td"),r.dc(416,"2"),r.Jb(),r.Kb(417,"td"),r.dc(418,"+="),r.Jb(),r.Kb(419,"td"),r.dc(420,"a+=5"),r.Jb(),r.Kb(421,"td"),r.dc(422,"a=a+5"),r.Jb(),r.Jb(),r.Kb(423,"tr"),r.Kb(424,"td"),r.dc(425,"3"),r.Jb(),r.Kb(426,"td"),r.dc(427,"-="),r.Jb(),r.Kb(428,"td"),r.dc(429,"a-=5"),r.Jb(),r.Kb(430,"td"),r.dc(431,"a=a-5"),r.Jb(),r.Jb(),r.Kb(432,"tr"),r.Kb(433,"td"),r.dc(434,"4"),r.Jb(),r.Kb(435,"td"),r.dc(436,"*="),r.Jb(),r.Kb(437,"td"),r.dc(438,"a*=5"),r.Jb(),r.Kb(439,"td"),r.dc(440,"a=a*5"),r.Jb(),r.Jb(),r.Kb(441,"tr"),r.Kb(442,"td"),r.dc(443,"5"),r.Jb(),r.Kb(444,"td"),r.dc(445,"/="),r.Jb(),r.Kb(446,"td"),r.dc(447,"a/=5"),r.Jb(),r.Kb(448,"td"),r.dc(449,"a=a/5"),r.Jb(),r.Jb(),r.Kb(450,"tr"),r.Kb(451,"td"),r.dc(452,"6"),r.Jb(),r.Kb(453,"td"),r.dc(454,"%="),r.Jb(),r.Kb(455,"td"),r.dc(456,"a%=5"),r.Jb(),r.Kb(457,"td"),r.dc(458,"a=a%5"),r.Jb(),r.Jb(),r.Kb(459,"tr"),r.Kb(460,"td"),r.dc(461,"7"),r.Jb(),r.Kb(462,"td"),r.dc(463,"//="),r.Jb(),r.Kb(464,"td"),r.dc(465,"a//=5"),r.Jb(),r.Kb(466,"td"),r.dc(467,"a=a//5"),r.Jb(),r.Jb(),r.Kb(468,"tr"),r.Kb(469,"td"),r.dc(470,"8"),r.Jb(),r.Kb(471,"td"),r.dc(472,"**="),r.Jb(),r.Kb(473,"td"),r.dc(474,"a**=5"),r.Jb(),r.Kb(475,"td"),r.dc(476,"a=a**5"),r.Jb(),r.Jb(),r.Kb(477,"tr"),r.Kb(478,"td"),r.dc(479,"9"),r.Jb(),r.Kb(480,"td"),r.dc(481,"&="),r.Jb(),r.Kb(482,"td"),r.dc(483,"a&=5"),r.Jb(),r.Kb(484,"td"),r.dc(485,"a=a&5"),r.Jb(),r.Jb(),r.Kb(486,"tr"),r.Kb(487,"td"),r.dc(488,"10"),r.Jb(),r.Kb(489,"td"),r.dc(490,"|="),r.Jb(),r.Kb(491,"td"),r.dc(492,"a|=5"),r.Jb(),r.Kb(493,"td"),r.dc(494,"a=a|5"),r.Jb(),r.Jb(),r.Kb(495,"tr"),r.Kb(496,"td"),r.dc(497,"11"),r.Jb(),r.Kb(498,"td"),r.dc(499,"^="),r.Jb(),r.Kb(500,"td"),r.dc(501,"a^=5"),r.Jb(),r.Kb(502,"td"),r.dc(503,"a=a^5"),r.Jb(),r.Jb(),r.Kb(504,"tr"),r.Kb(505,"td"),r.dc(506,"12"),r.Jb(),r.Kb(507,"td"),r.dc(508,"<<="),r.Jb(),r.Kb(509,"td"),r.dc(510,"a<<=5"),r.Jb(),r.Kb(511,"td"),r.dc(512,"a=a<<5"),r.Jb(),r.Jb(),r.Kb(513,"tr"),r.Kb(514,"td"),r.dc(515,"13"),r.Jb(),r.Kb(516,"td"),r.dc(517,">>="),r.Jb(),r.Kb(518,"td"),r.dc(519,"a>>=5"),r.Jb(),r.Kb(520,"td"),r.dc(521,"a=a>>5"),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(522,"div",7),r.Kb(523,"h3",8),r.dc(524,"6. Membership Operators:"),r.Jb();r.Kb(525,"div",9),r.Kb(526,"p"),r.dc(527," Membership operators are used to find whether a value is a member of a sequence such as or list "),r.Jb(),r.Jb(),r.Kb(528,"div",11),r.Kb(529,"table",12),r.Kb(530,"tbody"),r.Kb(531,"tr"),r.Kb(532,"th"),r.dc(533,"Sr.No."),r.Jb(),r.Kb(534,"th"),r.dc(535,"Operators"),r.Jb(),r.Kb(536,"th"),r.dc(537,"Meaning"),r.Jb(),r.Jb(),r.Kb(538,"tr"),r.Kb(539,"td"),r.dc(540,"1"),r.Jb(),r.Kb(541,"td"),r.dc(542,"in"),r.Jb(),r.Kb(543,"td"),r.dc(544," It returns True if a sequence with specified value is present in the object. "),r.Jb(),r.Jb(),r.Kb(545,"tr"),r.Kb(546,"td"),r.dc(547,"2"),r.Jb(),r.Kb(548,"td"),r.dc(549,"not in"),r.Jb(),r.Kb(550,"td"),r.dc(551," It returns True if a sequence with specified value is not present in the object. "),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(552,"h3",8),r.dc(553,"Examples:"),r.Jb(),r.Kb(554,"div",15),r.Kb(555,"pre"),r.Kb(556,"span",16),r.dc(557,"# Membership operators"),r.Jb(),r.dc(558,"\n    "),r.Kb(559,"span",17),r.dc(560,"color"),r.Jb(),r.Kb(561,"span",18),r.dc(562,"="),r.Jb(),r.Kb(563,"span",17),r.dc(564,"["),r.Jb(),r.Kb(565,"span",19),r.dc(566,"'red'"),r.Jb(),r.Kb(567,"span",17),r.dc(568,","),r.Jb(),r.Kb(569,"span",19),r.dc(570,"'blue'"),r.Jb(),r.Kb(571,"span",17),r.dc(572,","),r.Jb(),r.Kb(573,"span",19),r.dc(574,"'green'"),r.Jb(),r.Kb(575,"span",17),r.dc(576,"]"),r.Jb(),r.dc(577,"\n    "),r.Kb(578,"span",20),r.dc(579,"print"),r.Jb(),r.Kb(580,"span",19),r.dc(581,"("),r.Jb(),r.Kb(582,"span",21),r.dc(583,"'blue'"),r.Jb(),r.Kb(584,"span",19),r.dc(585," in "),r.Jb(),r.Kb(586,"span",21),r.dc(587,"color"),r.Jb(),r.Kb(588,"span",19),r.dc(589,")"),r.Jb(),r.dc(590,"\n\n    "),r.Kb(591,"span",20),r.dc(592,"print"),r.Jb(),r.Kb(593,"span",19),r.dc(594,"("),r.Jb(),r.Kb(595,"span",21),r.dc(596,"'yellow'"),r.Jb(),r.Kb(597,"span",19),r.dc(598," in "),r.Jb(),r.Kb(599,"span",21),r.dc(600,"color"),r.Jb(),r.Kb(601,"span",19),r.dc(602,")"),r.Jb(),r.dc(603,"\n\n    "),r.Kb(604,"span",20),r.dc(605,"print"),r.Jb(),r.Kb(606,"span",19),r.dc(607,"("),r.Jb(),r.Kb(608,"span",21),r.dc(609,"'yellow'"),r.Jb(),r.Kb(610,"span",19),r.dc(611," not in "),r.Jb(),r.Kb(612,"span",21),r.dc(613,"color"),r.Jb(),r.Kb(614,"span",19),r.dc(615,")"),r.Jb(),r.dc(616,"\n"),r.Jb(),r.Jb(),r.Kb(617,"h3",8),r.dc(618,"Output:"),r.Jb(),r.Kb(619,"div",9),r.Kb(620,"p"),r.dc(621," True "),r.Gb(622,"br"),r.dc(623," False "),r.Gb(624,"br"),r.dc(625," True "),r.Jb(),r.Jb(),r.Jb(),r.Kb(626,"div",7),r.Kb(627,"h3",8),r.dc(628,"7. Identity Operators:"),r.Jb(),r.Kb(629,"div",9),r.Kb(630,"p"),r.dc(631," Identity operators are used to determine whether a value is of a certain variable contains. "),r.Jb(),r.Jb(),r.Kb(632,"div",11),r.Kb(633,"table",12),r.Kb(634,"tbody"),r.Kb(635,"tr"),r.Kb(636,"th"),r.dc(637,"Sr.No."),r.Jb(),r.Kb(638,"th"),r.dc(639,"Operators"),r.Jb(),r.Kb(640,"th"),r.dc(641,"Meaning"),r.Jb(),r.Jb(),r.Kb(642,"tr"),r.Kb(643,"td"),r.dc(644,"1"),r.Jb(),r.Kb(645,"td"),r.dc(646,"is"),r.Jb(),r.Kb(647,"td"),r.dc(648," It returns True if both the operand point to point to same memory location. "),r.Jb(),r.Jb(),r.Kb(649,"tr"),r.Kb(650,"td"),r.dc(651,"2"),r.Jb(),r.Kb(652,"td"),r.dc(653,"not is"),r.Jb(),r.Kb(654,"td"),r.dc(655," It returns True if both the operand point to different memory location. "),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Kb(656,"h3",8),r.dc(657,"Example:"),r.Jb(),r.Kb(658,"div",15),r.Kb(659,"pre"),r.dc(660,"    "),r.Kb(661,"span",16),r.dc(662,"# Identity operators"),r.Jb(),r.dc(663,"\n    "),r.Kb(664,"span",17),r.dc(665,"color1"),r.Jb(),r.Kb(666,"span",18),r.dc(667,"="),r.Jb(),r.Kb(668,"span",17),r.dc(669,"["),r.Jb(),r.Kb(670,"span",19),r.dc(671,"'red'"),r.Jb(),r.Kb(672,"span",17),r.dc(673,","),r.Jb(),r.Kb(674,"span",19),r.dc(675,"'blue'"),r.Jb(),r.Kb(676,"span",17),r.dc(677,","),r.Jb(),r.Kb(678,"span",19),r.dc(679,"'green'"),r.Jb(),r.Kb(680,"span",17),r.dc(681,"]"),r.Jb(),r.dc(682,"\n    "),r.Kb(683,"span",17),r.dc(684,"color2"),r.Jb(),r.Kb(685,"span",18),r.dc(686,"="),r.Jb(),r.Kb(687,"span",17),r.dc(688,"["),r.Jb(),r.Kb(689,"span",19),r.dc(690,"'red'"),r.Jb(),r.Kb(691,"span",17),r.dc(692,","),r.Jb(),r.Kb(693,"span",19),r.dc(694,"'blue'"),r.Jb(),r.Kb(695,"span",17),r.dc(696,","),r.Jb(),r.Kb(697,"span",19),r.dc(698,"'green'"),r.Jb(),r.Kb(699,"span",17),r.dc(700,"]"),r.Jb(),r.dc(701,"\n    "),r.Kb(702,"span",17),r.dc(703,"color3"),r.Jb(),r.Kb(704,"span",18),r.dc(705,"="),r.Jb(),r.Kb(706,"span",17),r.dc(707,"color1"),r.Jb(),r.dc(708,"\n\n    "),r.Kb(709,"span",20),r.dc(710,"print"),r.Jb(),r.Kb(711,"span",19),r.dc(712,"("),r.Jb(),r.Kb(713,"span",21),r.dc(714,"color1"),r.Jb(),r.Kb(715,"span",19),r.dc(716," is "),r.Jb(),r.Kb(717,"span",21),r.dc(718,"color2"),r.Jb(),r.Kb(719,"span",19),r.dc(720,")"),r.Jb(),r.dc(721,"\n\n    "),r.Kb(722,"span",20),r.dc(723,"print"),r.Jb(),r.Kb(724,"span",19),r.dc(725,"("),r.Jb(),r.Kb(726,"span",21),r.dc(727,"color1"),r.Jb(),r.Kb(728,"span",19),r.dc(729," is "),r.Jb(),r.Kb(730,"span",21),r.dc(731,"color3"),r.Jb(),r.Kb(732,"span",19),r.dc(733,")"),r.Jb(),r.dc(734,"\n\n    "),r.Kb(735,"span",20),r.dc(736,"print"),r.Jb(),r.Kb(737,"span",19),r.dc(738,"("),r.Jb(),r.Kb(739,"span",21),r.dc(740,"color1"),r.Jb(),r.Kb(741,"span",19),r.dc(742," not is "),r.Jb(),r.Kb(743,"span",21),r.dc(744,"color2"),r.Jb(),r.Kb(745,"span",19),r.dc(746,")"),r.Jb(),r.Jb(),r.Jb(),r.Kb(747,"h3",8),r.dc(748,"Output:"),r.Jb(),r.Kb(749,"div",9),r.Kb(750,"p"),r.dc(751," False "),r.Gb(752,"br"),r.dc(753," True"),r.Gb(754,"br"),r.dc(755," True "),r.Jb(),r.Jb(),r.Jb(),r.Kb(756,"div",7),r.Kb(757,"h3",8),r.dc(758,"8. Modulus Operators:"),r.Jb(),r.Kb(759,"div",9),r.Kb(760,"ul"),r.Kb(761,"li"),r.dc(762," The "),r.Kb(763,"span",13),r.dc(764,"% "),r.Jb(),r.dc(765,"operator that gives the remainder from the division of first argument by second "),r.Jb(),r.Kb(766,"li"),r.dc(767," The "),r.Kb(768,"span",13),r.dc(769,"// "),r.Jb(),r.dc(770,"operator is used for floor division returns the integral part of the quotient. "),r.Jb(),r.Jb(),r.Jb(),r.Kb(771,"h3",8),r.dc(772,"Example:"),r.Jb(),r.Kb(773,"div",15),r.Kb(774,"pre"),r.dc(775,"    "),r.Kb(776,"span",17),r.dc(777,"a"),r.Jb(),r.Kb(778,"span",18),r.dc(779,"="),r.Jb(),r.Kb(780,"span",17),r.dc(781,"10"),r.Jb(),r.dc(782,"\n    "),r.Kb(783,"span",17),r.dc(784,"b"),r.Jb(),r.Kb(785,"span",18),r.dc(786,"="),r.Jb(),r.Kb(787,"span",17),r.dc(788,"3"),r.Jb(),r.dc(789,"\n    "),r.Kb(790,"span",17),r.dc(791,"c"),r.Jb(),r.Kb(792,"span",18),r.dc(793,"="),r.Jb(),r.Kb(794,"span",17),r.dc(795,"a"),r.Jb(),r.Kb(796,"span",13),r.dc(797,"%"),r.Jb(),r.Kb(798,"span",17),r.dc(799,"b"),r.Jb(),r.dc(800,"\n    "),r.Kb(801,"span",20),r.dc(802,"print"),r.Jb(),r.Kb(803,"span",19),r.dc(804,"("),r.Jb(),r.Kb(805,"span",21),r.dc(806,"c"),r.Jb(),r.Kb(807,"span",19),r.dc(808,")"),r.Jb(),r.dc(809,"\n\n    "),r.Kb(810,"span",17),r.dc(811,"a"),r.Jb(),r.Kb(812,"span",18),r.dc(813,"="),r.Jb(),r.Kb(814,"span",17),r.dc(815,"10.33"),r.Jb(),r.dc(816,"\n    "),r.Kb(817,"span",17),r.dc(818,"b"),r.Jb(),r.Kb(819,"span",18),r.dc(820,"="),r.Jb(),r.Kb(821,"span",17),r.dc(822,"3.3"),r.Jb(),r.dc(823,"\n    "),r.Kb(824,"span",17),r.dc(825,"c"),r.Jb(),r.Kb(826,"span",18),r.dc(827,"="),r.Jb(),r.Kb(828,"span",17),r.dc(829,"a"),r.Jb(),r.Kb(830,"span",13),r.dc(831,"//"),r.Jb(),r.Kb(832,"span",17),r.dc(833,"b"),r.Jb(),r.dc(834,"\n    "),r.Kb(835,"span",20),r.dc(836,"print"),r.Jb(),r.Kb(837,"span",19),r.dc(838,"("),r.Jb(),r.Kb(839,"span",21),r.dc(840,"c"),r.Jb(),r.Kb(841,"span",19),r.dc(842,")"),r.Jb(),r.Jb(),r.Jb(),r.Kb(843,"h3",8),r.dc(844,"Output:"),r.Jb(),r.Kb(845,"div",9),r.Kb(846,"p"),r.dc(847,"1"),r.Gb(848,"br"),r.dc(849,"3.0"),r.Jb(),r.Jb(),r.Jb(),r.Kb(850,"div",7),r.Kb(851,"h3",8),r.dc(852,"9. String Operators:"),r.Jb(),r.Kb(853,"div",9),r.Kb(854,"ul"),r.Kb(855,"li"),r.dc(856,"String is a collection of characters."),r.Jb(),r.Kb(857,"li"),r.dc(858," In Python it is possible to perform the concatenation and repetition operations on strings using the operators like"),r.Kb(859,"span",13),r.dc(860," + "),r.Jb(),r.dc(861,"and"),r.Kb(862,"span",13),r.dc(863,"*"),r.Jb(),r.dc(864,". "),r.Jb(),r.Jb(),r.Jb(),r.Kb(865,"h3",8),r.dc(866,"Example:"),r.Jb(),r.Kb(867,"div",15),r.Kb(868,"pre"),r.dc(869,"    "),r.Kb(870,"span",17),r.dc(871,"str1"),r.Kb(872,"span",18),r.dc(873,"="),r.Jb(),r.dc(874,'"My"'),r.Jb(),r.dc(875,"\n    "),r.Kb(876,"span",17),r.dc(877,"str2"),r.Kb(878,"span",18),r.dc(879,"="),r.Jb(),r.dc(880,'"String"'),r.Jb(),r.dc(881,"\n    "),r.Kb(882,"span",20),r.dc(883,"print"),r.Jb(),r.Kb(884,"span",19),r.dc(885,"("),r.Jb(),r.Kb(886,"span",21),r.dc(887,"str1"),r.Jb(),r.Kb(888,"span",18),r.dc(889,"+"),r.Jb(),r.Kb(890,"span",21),r.dc(891,"str2"),r.Jb(),r.Kb(892,"span",19),r.dc(893,")"),r.Jb(),r.dc(894,"\n    "),r.Kb(895,"span",20),r.dc(896,"print"),r.Jb(),r.Kb(897,"span",19),r.dc(898,"("),r.Jb(),r.Kb(899,"span",21),r.dc(900,"str2"),r.Jb(),r.Kb(901,"span",18),r.dc(902,"*"),r.Jb(),r.Kb(903,"span",21),r.dc(904,"3"),r.Jb(),r.Kb(905,"span",19),r.dc(906,")"),r.Jb(),r.Jb(),r.Jb(),r.Kb(907,"h3",8),r.dc(908,"Output :"),r.Jb(),r.Kb(909,"div",9),r.Kb(910,"p"),r.dc(911," My"),r.Gb(912,"br"),r.dc(913," String"),r.Gb(914,"br"),r.dc(915," MyString"),r.Gb(916,"br"),r.dc(917," StringStringString "),r.Jb(),r.Jb(),r.Jb(),r.Jb(),r.Jb()}},directives:[a.a,e.f,J.a],styles:[""]}),b})()}];let n=(()=>{class b{}return b.\u0275fac=function(d){return new(d||b)},b.\u0275mod=r.Db({type:b}),b.\u0275inj=r.Cb({imports:[[e.i.forChild(K)],e.i]}),b})();var s=t("VD3N");let i=(()=>{class b{}return b.\u0275fac=function(d){return new(d||b)},b.\u0275mod=r.Db({type:b}),b.\u0275inj=r.Cb({imports:[[c.c,n,s.PythonModule]]}),b})()}}]);