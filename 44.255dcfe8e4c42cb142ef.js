(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{"1XF9":function(b,t,e){"use strict";e.r(t),e.d(t,"L6Module",function(){return i});var I=e("ofXK"),r=e("tyNb"),a=e("fXoL"),J=e("8wfc"),n=e("V+4I");const Z=[{path:"",component:(()=>{class b{constructor(){}ngOnInit(){}}return b.\u0275fac=function(t){return new(t||b)},b.\u0275cmp=a.yb({type:b,selectors:[["app-l6"]],decls:917,vars:0,consts:[[1,"containercss"],["id","item-leftbox",1,"item1"],[1,"item2"],["id","item2-div-1",1,"item2-div"],["data-bs-toggle","offcanvas","href","#offcanvasExample","role","button","aria-controls","offcanvasExample",1,"bi","bi-list","svgcss"],["tabindex","-1","id","offcanvasExample","aria-labelledby","offcanvasExampleLabel",1,"offcanvas","offcanvas-start"],[1,"item2-div"],["id","titlepadding"],[1,"codepadding"],["type","circle"],[1,"tablecss"],[1,"table","table-bordered","border-primary"],[1,"atn"],[2,"padding-left","20px"],[1,"codebox"],[1,"atv"],[1,"str"],[1,"pun"],[1,"pln"],[1,"dec"],[1,"tag"]],template:function(b,t){if(1&b){a.Jb(0,"div",0),a.Jb(1,"div",1),a.Fb(2,"app-desktop-nav"),a.Ib(),a.Jb(3,"div",2),a.Jb(4,"div",3),a.Fb(5,"a",4),a.Zb(6," Operators "),a.Ib(),a.Jb(7,"div",5),a.Fb(8,"app-mobile-nav"),a.Ib(),a.Jb(9,"div",6),a.Jb(10,"h3",7),a.Zb(11,"Operators:"),a.Ib(),a.Jb(12,"div",8),a.Jb(13,"ol"),a.Jb(14,"li"),a.Zb(15," Operators are used to perform operations on variables and values . "),a.Ib(),a.Jb(16,"li"),a.Zb(17," For example "),a.Jb(18,"b"),a.Zb(19,"+ , - , * "),a.Ib(),a.Zb(20,"and "),a.Jb(21,"b"),a.Zb(22,"/"),a.Ib(),a.Zb(23," are used for performing arithmatic operation. "),a.Ib(),a.Jb(24,"li"),a.Zb(25," Python divides the operators in the following groups: "),a.Jb(26,"ul",9),a.Jb(27,"li"),a.Zb(28,"Arithmetic Operators"),a.Ib(),a.Jb(29,"li"),a.Zb(30,"Comparison Operators"),a.Ib(),a.Jb(31,"li"),a.Zb(32,"Logical Operators"),a.Ib(),a.Jb(33,"li"),a.Zb(34,"Bitwise Operators"),a.Ib(),a.Jb(35,"li"),a.Zb(36,"Assignment Operators"),a.Ib(),a.Jb(37,"li"),a.Zb(38,"Membership Operators"),a.Ib(),a.Jb(39,"li"),a.Zb(40,"Identity Operators"),a.Ib(),a.Jb(41,"li"),a.Zb(42,"Modulus Operators"),a.Ib(),a.Jb(43,"li"),a.Zb(44,"String Operators"),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(45,"div",6),a.Jb(46,"h3",7),a.Zb(47,"1. Arithmetic Operators:"),a.Ib(),a.Jb(48,"p"),a.Zb(49," Arithmetic operators are used with numeric values to perform common mathematical operations "),a.Ib(),a.Jb(50,"div",10),a.Jb(51,"table",11),a.Jb(52,"tbody"),a.Jb(53,"tr"),a.Jb(54,"th"),a.Zb(55,"Sr. No."),a.Ib(),a.Jb(56,"th"),a.Zb(57,"Operators"),a.Ib(),a.Jb(58,"th"),a.Zb(59,"Meaning"),a.Ib(),a.Jb(60,"th"),a.Zb(61,"Example"),a.Ib(),a.Ib(),a.Jb(62,"tr"),a.Jb(63,"td"),a.Zb(64,"1"),a.Ib(),a.Jb(65,"td"),a.Zb(66,"+"),a.Ib(),a.Jb(67,"td"),a.Zb(68," Addition operator is used for performing addition of two numbers "),a.Ib(),a.Jb(69,"td"),a.Zb(70,"10+20=30"),a.Ib(),a.Ib(),a.Jb(71,"tr"),a.Jb(72,"td"),a.Zb(73,"2"),a.Ib(),a.Jb(74,"td"),a.Zb(75,"-"),a.Ib(),a.Jb(76,"td"),a.Zb(77,"Subtraction operator is used for performing subtraction"),a.Ib(),a.Jb(78,"td"),a.Zb(79,"20-10=10"),a.Ib(),a.Ib(),a.Jb(80,"tr"),a.Jb(81,"td"),a.Zb(82,"3"),a.Ib(),a.Jb(83,"td"),a.Zb(84,"*"),a.Ib(),a.Jb(85,"td"),a.Zb(86," Multiplication operator is used for performing multiplication "),a.Ib(),a.Jb(87,"td"),a.Zb(88,"20*10=200"),a.Ib(),a.Ib(),a.Jb(89,"tr"),a.Jb(90,"td"),a.Zb(91,"4"),a.Ib(),a.Jb(92,"td"),a.Zb(93,"/"),a.Ib(),a.Jb(94,"td"),a.Zb(95," Division operator is used for performing division of two numbers "),a.Ib(),a.Jb(96,"td"),a.Zb(97,"20/10=2"),a.Ib(),a.Ib(),a.Jb(98,"tr"),a.Jb(99,"td"),a.Zb(100,"5"),a.Ib(),a.Jb(101,"td"),a.Zb(102,"%"),a.Ib(),a.Jb(103,"td"),a.Zb(104,"Mod operator returns the remainder value"),a.Ib(),a.Jb(105,"td"),a.Zb(106,"10%2=0"),a.Ib(),a.Ib(),a.Jb(107,"tr"),a.Jb(108,"td"),a.Zb(109,"6"),a.Ib(),a.Jb(110,"td"),a.Zb(111,"**"),a.Ib(),a.Jb(112,"td"),a.Zb(113,"This is an exponentiation operator(power)"),a.Ib(),a.Jb(114,"td"),a.Zb(115,"2**3=8"),a.Ib(),a.Ib(),a.Jb(116,"tr"),a.Jb(117,"td"),a.Zb(118,"7"),a.Ib(),a.Jb(119,"td"),a.Zb(120,"//"),a.Ib(),a.Jb(121,"td"),a.Zb(122," This is floor division operator. In this operation the result is the quotient in which the digits after the decimal point are removed "),a.Ib(),a.Jb(123,"td"),a.Zb(124,"10//3=3"),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(125,"div",6),a.Jb(126,"h3",7),a.Zb(127,"2. Comparision Operators:"),a.Ib(),a.Jb(128,"p"),a.Zb(129,"Comparision operators are used to compare two values:"),a.Ib(),a.Jb(130,"div",10),a.Jb(131,"table",11),a.Jb(132,"tbody"),a.Jb(133,"tr"),a.Jb(134,"th"),a.Zb(135,"Sr.No."),a.Ib(),a.Jb(136,"th"),a.Zb(137,"Operators"),a.Ib(),a.Jb(138,"th"),a.Zb(139,"Meaning"),a.Ib(),a.Jb(140,"th"),a.Zb(141,"Example"),a.Ib(),a.Ib(),a.Jb(142,"tr"),a.Jb(143,"td"),a.Zb(144,"1"),a.Ib(),a.Jb(145,"td"),a.Zb(146,"=="),a.Ib(),a.Jb(147,"td"),a.Zb(148,"If two values are equal then condition becomes true"),a.Ib(),a.Jb(149,"td"),a.Zb(150,"10==20"),a.Fb(151,"br"),a.Zb(152,"False"),a.Ib(),a.Ib(),a.Jb(153,"tr"),a.Jb(154,"td"),a.Zb(155,"2"),a.Ib(),a.Jb(156,"td"),a.Zb(157,"!="),a.Ib(),a.Jb(158,"td"),a.Zb(159," If two operands are not equal then the condition becomes true "),a.Ib(),a.Jb(160,"td"),a.Zb(161,"20!=10 "),a.Fb(162,"br"),a.Zb(163,"True"),a.Ib(),a.Ib(),a.Jb(164,"tr"),a.Jb(165,"td"),a.Zb(166,"3"),a.Ib(),a.Jb(167,"td"),a.Zb(168,"<>"),a.Ib(),a.Jb(169,"td"),a.Zb(170," This is similar to "),a.Jb(171,"b"),a.Zb(172,"!="),a.Ib(),a.Zb(173," That means if two values are not equal then it return true "),a.Ib(),a.Jb(174,"td"),a.Zb(175,"20<>10 "),a.Fb(176,"br"),a.Zb(177,"True"),a.Ib(),a.Ib(),a.Jb(178,"tr"),a.Jb(179,"td"),a.Zb(180,"4"),a.Ib(),a.Jb(181,"td"),a.Zb(182,"<"),a.Ib(),a.Jb(183,"td"),a.Zb(184," This is less than operator. If left operand is less than the right operator then the return value is true "),a.Ib(),a.Jb(185,"td"),a.Zb(186,"20<10"),a.Fb(187,"br"),a.Zb(188,"False"),a.Ib(),a.Ib(),a.Jb(189,"tr"),a.Jb(190,"td"),a.Zb(191,"5"),a.Ib(),a.Jb(192,"td"),a.Zb(193,">"),a.Ib(),a.Jb(194,"td"),a.Zb(195," This is greater than operator. If left operand is greater than the right operator then the return value is true "),a.Ib(),a.Jb(196,"td"),a.Zb(197,"20>10 "),a.Fb(198,"br"),a.Zb(199,"True"),a.Ib(),a.Ib(),a.Jb(200,"tr"),a.Jb(201,"td"),a.Zb(202,"6"),a.Ib(),a.Jb(203,"td"),a.Zb(204,"<="),a.Ib(),a.Jb(205,"td"),a.Zb(206," This is less than equal to operator. If left operand is less than the right operator or equal to right operator then the return value is true "),a.Ib(),a.Jb(207,"td"),a.Zb(208," 10<=10"),a.Fb(209,"br"),a.Zb(210," True "),a.Ib(),a.Ib(),a.Jb(211,"tr"),a.Jb(212,"td"),a.Zb(213,"7"),a.Ib(),a.Jb(214,"td"),a.Zb(215,">="),a.Ib(),a.Jb(216,"td"),a.Zb(217," This is greater than equal to operator. If left operand is greater than the right operator or equal to right operator then the return value is true "),a.Ib(),a.Jb(218,"td"),a.Zb(219," 20<=10"),a.Fb(220,"br"),a.Zb(221," True "),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(222,"div",6),a.Jb(223,"h3",7),a.Zb(224,"3. Logical Operators:"),a.Ib(),a.Jb(225,"div",8),a.Jb(226,"p"),a.Zb(227,"Logical operators are used to combine conditional statements:"),a.Ib(),a.Ib(),a.Jb(228,"div",10),a.Jb(229,"table",11),a.Jb(230,"tbody"),a.Jb(231,"tr"),a.Jb(232,"th"),a.Zb(233,"Sr. No."),a.Ib(),a.Jb(234,"th"),a.Zb(235,"Operators"),a.Ib(),a.Jb(236,"th"),a.Zb(237,"Meaning"),a.Ib(),a.Jb(238,"th"),a.Zb(239,"Example"),a.Ib(),a.Ib(),a.Jb(240,"tr"),a.Jb(241,"td"),a.Zb(242,"1"),a.Ib(),a.Jb(243,"td"),a.Zb(244,"and"),a.Ib(),a.Jb(245,"td"),a.Zb(246," If both the operands are true then the entire expression is true "),a.Ib(),a.Jb(247,"td"),a.Zb(248," a=5 "),a.Fb(249,"br"),a.Zb(250," a>2 and a< 3"),a.Fb(251,"br"),a.Zb(252,"False "),a.Ib(),a.Ib(),a.Jb(253,"tr"),a.Jb(254,"td"),a.Zb(255,"2"),a.Ib(),a.Jb(256,"td"),a.Zb(257,"or"),a.Ib(),a.Jb(258,"td"),a.Zb(259,"If either first or second operand is true"),a.Ib(),a.Jb(260,"td"),a.Zb(261," a=5 "),a.Fb(262,"br"),a.Zb(263," a>2 and a< 3"),a.Fb(264,"br"),a.Zb(265,"True "),a.Ib(),a.Ib(),a.Jb(266,"tr"),a.Jb(267,"td"),a.Zb(268,"3"),a.Ib(),a.Jb(269,"td"),a.Zb(270,"not"),a.Ib(),a.Jb(271,"td"),a.Zb(272," If the operand is false then the entire expression is true "),a.Ib(),a.Jb(273,"td"),a.Zb(274,"a=5 "),a.Fb(275,"br"),a.Zb(276,"not (a>2 and a< 3)"),a.Fb(277,"br"),a.Zb(278,"True"),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(279,"div",6),a.Jb(280,"h3",7),a.Zb(281,"4. Bitwise Operators:"),a.Ib(),a.Jb(282,"div",8),a.Jb(283,"ul"),a.Jb(284,"li"),a.Zb(285,"Bitwise operators are used to compare (binary) numbers:"),a.Ib(),a.Jb(286,"li"),a.Zb(287," In the table below: "),a.Jb(288,"ul"),a.Jb(289,"li"),a.Zb(290,"a=010 (in binary)"),a.Ib(),a.Jb(291,"li"),a.Zb(292,"b=011 (in binary)"),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(293,"div",10),a.Jb(294,"table",11),a.Jb(295,"tbody"),a.Jb(296,"tr"),a.Jb(297,"th"),a.Zb(298,"Sr. No."),a.Ib(),a.Jb(299,"th"),a.Zb(300,"Operators"),a.Ib(),a.Jb(301,"th"),a.Zb(302,"Name"),a.Ib(),a.Jb(303,"th"),a.Zb(304,"Meaning"),a.Ib(),a.Jb(305,"th"),a.Zb(306,"Example"),a.Ib(),a.Ib(),a.Jb(307,"tr"),a.Jb(308,"td"),a.Zb(309,"1"),a.Ib(),a.Jb(310,"td"),a.Zb(311,"&"),a.Ib(),a.Jb(312,"td"),a.Zb(313,"AND"),a.Ib(),a.Jb(314,"td"),a.Zb(315,"returns 1 if both the bits is 1 ."),a.Ib(),a.Jb(316,"td"),a.Zb(317,"a&b=010"),a.Ib(),a.Ib(),a.Jb(318,"tr"),a.Jb(319,"td"),a.Zb(320,"2"),a.Ib(),a.Jb(321,"td"),a.Zb(322,"|"),a.Ib(),a.Jb(323,"td"),a.Zb(324,"OR"),a.Ib(),a.Jb(325,"td"),a.Zb(326,"return 1 if one of two bits is 1."),a.Ib(),a.Jb(327,"td"),a.Zb(328,"a|b=011"),a.Ib(),a.Ib(),a.Jb(329,"tr"),a.Jb(330,"td"),a.Zb(331,"3"),a.Ib(),a.Jb(332,"td"),a.Zb(333,"~"),a.Ib(),a.Jb(334,"td"),a.Zb(335,"NOT"),a.Ib(),a.Jb(336,"td"),a.Zb(337,"Inverts all the bits."),a.Ib(),a.Jb(338,"td"),a.Zb(339,"~a=101"),a.Ib(),a.Ib(),a.Jb(340,"tr"),a.Jb(341,"td"),a.Zb(342,"4"),a.Ib(),a.Jb(343,"td"),a.Zb(344,"^"),a.Ib(),a.Jb(345,"td"),a.Zb(346,"XOR"),a.Ib(),a.Jb(347,"td"),a.Zb(348,"return 1 if only one of two bits is 1"),a.Ib(),a.Jb(349,"td"),a.Zb(350,"a ^ b=001"),a.Ib(),a.Ib(),a.Jb(351,"tr"),a.Jb(352,"td"),a.Zb(353,"5"),a.Ib(),a.Jb(354,"td"),a.Zb(355,"<<"),a.Ib(),a.Jb(356,"td"),a.Zb(357,"Zero fill left shift"),a.Ib(),a.Jb(358,"td"),a.Zb(359," Shifts the bits of the number to the left and fills 0 on void left as a result "),a.Ib(),a.Jb(360,"td"),a.Zb(361," a<<1=100 "),a.Fb(362,"br"),a.Zb(363,"Note:"),a.Jb(364,"span",12),a.Zb(365,"<<1"),a.Ib(),a.Zb(366," means make left by one position and add a tailing zero"),a.Fb(367,"br"),a.Zb(368," here a=010 after left shift it becomes 100 "),a.Ib(),a.Ib(),a.Jb(369,"tr"),a.Jb(370,"td"),a.Zb(371,"6"),a.Ib(),a.Jb(372,"td"),a.Zb(373,">>"),a.Ib(),a.Jb(374,"td"),a.Zb(375,"Signed right shift"),a.Ib(),a.Jb(376,"td"),a.Zb(377," Shifts the bits of the number to the right and fills 0 on void left as a result "),a.Ib(),a.Jb(378,"td"),a.Zb(379," a>>1=001"),a.Fb(380,"br"),a.Zb(381,"Note:"),a.Jb(382,"span",12),a.Zb(383,">>1"),a.Ib(),a.Zb(384," means make right shift by one position and add a tailing zero "),a.Fb(385,"br"),a.Zb(386,"here a=010 after left shift it becomes 001 "),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(387,"div",6),a.Jb(388,"h3",7),a.Zb(389,"5. Assignment Operators:"),a.Ib(),a.Jb(390,"p",13),a.Zb(391," Arithmetic operators are used to assign the values to variables "),a.Ib(),a.Jb(392,"div",10),a.Jb(393,"table",11),a.Jb(394,"tbody"),a.Jb(395,"tr"),a.Jb(396,"th"),a.Zb(397,"Sr. No."),a.Ib(),a.Jb(398,"th"),a.Zb(399,"Operators"),a.Ib(),a.Jb(400,"th"),a.Zb(401,"Example"),a.Ib(),a.Jb(402,"th"),a.Zb(403,"Same As"),a.Ib(),a.Ib(),a.Jb(404,"tr"),a.Jb(405,"td"),a.Zb(406,"1"),a.Ib(),a.Jb(407,"td"),a.Zb(408,"="),a.Ib(),a.Jb(409,"td"),a.Zb(410,"a=5"),a.Ib(),a.Jb(411,"td"),a.Zb(412,"a=5"),a.Ib(),a.Ib(),a.Jb(413,"tr"),a.Jb(414,"td"),a.Zb(415,"2"),a.Ib(),a.Jb(416,"td"),a.Zb(417,"+="),a.Ib(),a.Jb(418,"td"),a.Zb(419,"a+=5"),a.Ib(),a.Jb(420,"td"),a.Zb(421,"a=a+5"),a.Ib(),a.Ib(),a.Jb(422,"tr"),a.Jb(423,"td"),a.Zb(424,"3"),a.Ib(),a.Jb(425,"td"),a.Zb(426,"-="),a.Ib(),a.Jb(427,"td"),a.Zb(428,"a-=5"),a.Ib(),a.Jb(429,"td"),a.Zb(430,"a=a-5"),a.Ib(),a.Ib(),a.Jb(431,"tr"),a.Jb(432,"td"),a.Zb(433,"4"),a.Ib(),a.Jb(434,"td"),a.Zb(435,"*="),a.Ib(),a.Jb(436,"td"),a.Zb(437,"a*=5"),a.Ib(),a.Jb(438,"td"),a.Zb(439,"a=a*5"),a.Ib(),a.Ib(),a.Jb(440,"tr"),a.Jb(441,"td"),a.Zb(442,"5"),a.Ib(),a.Jb(443,"td"),a.Zb(444,"/="),a.Ib(),a.Jb(445,"td"),a.Zb(446,"a/=5"),a.Ib(),a.Jb(447,"td"),a.Zb(448,"a=a/5"),a.Ib(),a.Ib(),a.Jb(449,"tr"),a.Jb(450,"td"),a.Zb(451,"6"),a.Ib(),a.Jb(452,"td"),a.Zb(453,"%="),a.Ib(),a.Jb(454,"td"),a.Zb(455,"a%=5"),a.Ib(),a.Jb(456,"td"),a.Zb(457,"a=a%5"),a.Ib(),a.Ib(),a.Jb(458,"tr"),a.Jb(459,"td"),a.Zb(460,"7"),a.Ib(),a.Jb(461,"td"),a.Zb(462,"//="),a.Ib(),a.Jb(463,"td"),a.Zb(464,"a//=5"),a.Ib(),a.Jb(465,"td"),a.Zb(466,"a=a//5"),a.Ib(),a.Ib(),a.Jb(467,"tr"),a.Jb(468,"td"),a.Zb(469,"8"),a.Ib(),a.Jb(470,"td"),a.Zb(471,"**="),a.Ib(),a.Jb(472,"td"),a.Zb(473,"a**=5"),a.Ib(),a.Jb(474,"td"),a.Zb(475,"a=a**5"),a.Ib(),a.Ib(),a.Jb(476,"tr"),a.Jb(477,"td"),a.Zb(478,"9"),a.Ib(),a.Jb(479,"td"),a.Zb(480,"&="),a.Ib(),a.Jb(481,"td"),a.Zb(482,"a&=5"),a.Ib(),a.Jb(483,"td"),a.Zb(484,"a=a&5"),a.Ib(),a.Ib(),a.Jb(485,"tr"),a.Jb(486,"td"),a.Zb(487,"10"),a.Ib(),a.Jb(488,"td"),a.Zb(489,"|="),a.Ib(),a.Jb(490,"td"),a.Zb(491,"a|=5"),a.Ib(),a.Jb(492,"td"),a.Zb(493,"a=a|5"),a.Ib(),a.Ib(),a.Jb(494,"tr"),a.Jb(495,"td"),a.Zb(496,"11"),a.Ib(),a.Jb(497,"td"),a.Zb(498,"^="),a.Ib(),a.Jb(499,"td"),a.Zb(500,"a^=5"),a.Ib(),a.Jb(501,"td"),a.Zb(502,"a=a^5"),a.Ib(),a.Ib(),a.Jb(503,"tr"),a.Jb(504,"td"),a.Zb(505,"12"),a.Ib(),a.Jb(506,"td"),a.Zb(507,"<<="),a.Ib(),a.Jb(508,"td"),a.Zb(509,"a<<=5"),a.Ib(),a.Jb(510,"td"),a.Zb(511,"a=a<<5"),a.Ib(),a.Ib(),a.Jb(512,"tr"),a.Jb(513,"td"),a.Zb(514,"13"),a.Ib(),a.Jb(515,"td"),a.Zb(516,">>="),a.Ib(),a.Jb(517,"td"),a.Zb(518,"a>>=5"),a.Ib(),a.Jb(519,"td"),a.Zb(520,"a=a>>5"),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(521,"div",6),a.Jb(522,"h3",7),a.Zb(523,"6. Membership Operators:"),a.Ib(),a.Jb(524,"div",8);a.Jb(525,"p"),a.Zb(526," Membership operators are used to find whether a value is a member of a sequence such as or list "),a.Ib(),a.Ib(),a.Jb(527,"div",10),a.Jb(528,"table",11),a.Jb(529,"tbody"),a.Jb(530,"tr"),a.Jb(531,"th"),a.Zb(532,"Sr.No."),a.Ib(),a.Jb(533,"th"),a.Zb(534,"Operators"),a.Ib(),a.Jb(535,"th"),a.Zb(536,"Meaning"),a.Ib(),a.Ib(),a.Jb(537,"tr"),a.Jb(538,"td"),a.Zb(539,"1"),a.Ib(),a.Jb(540,"td"),a.Zb(541,"in"),a.Ib(),a.Jb(542,"td"),a.Zb(543," It returns True if a sequence with specified value is present in the object. "),a.Ib(),a.Ib(),a.Jb(544,"tr"),a.Jb(545,"td"),a.Zb(546,"2"),a.Ib(),a.Jb(547,"td"),a.Zb(548,"not in"),a.Ib(),a.Jb(549,"td"),a.Zb(550," It returns True if a sequence with specified value is not present in the object. "),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(551,"h3",7),a.Zb(552,"Examples:"),a.Ib(),a.Jb(553,"div",14),a.Jb(554,"pre"),a.Jb(555,"span",15),a.Zb(556,"# Membership operators"),a.Ib(),a.Zb(557,"\n    "),a.Jb(558,"span",16),a.Zb(559,"color"),a.Ib(),a.Jb(560,"span",17),a.Zb(561,"="),a.Ib(),a.Jb(562,"span",16),a.Zb(563,"["),a.Ib(),a.Jb(564,"span",18),a.Zb(565,"'red'"),a.Ib(),a.Jb(566,"span",16),a.Zb(567,","),a.Ib(),a.Jb(568,"span",18),a.Zb(569,"'blue'"),a.Ib(),a.Jb(570,"span",16),a.Zb(571,","),a.Ib(),a.Jb(572,"span",18),a.Zb(573,"'green'"),a.Ib(),a.Jb(574,"span",16),a.Zb(575,"]"),a.Ib(),a.Zb(576,"\n    "),a.Jb(577,"span",19),a.Zb(578,"print"),a.Ib(),a.Jb(579,"span",18),a.Zb(580,"("),a.Ib(),a.Jb(581,"span",20),a.Zb(582,"'blue'"),a.Ib(),a.Jb(583,"span",18),a.Zb(584," in "),a.Ib(),a.Jb(585,"span",20),a.Zb(586,"color"),a.Ib(),a.Jb(587,"span",18),a.Zb(588,")"),a.Ib(),a.Zb(589,"\n\n    "),a.Jb(590,"span",19),a.Zb(591,"print"),a.Ib(),a.Jb(592,"span",18),a.Zb(593,"("),a.Ib(),a.Jb(594,"span",20),a.Zb(595,"'yellow'"),a.Ib(),a.Jb(596,"span",18),a.Zb(597," in "),a.Ib(),a.Jb(598,"span",20),a.Zb(599,"color"),a.Ib(),a.Jb(600,"span",18),a.Zb(601,")"),a.Ib(),a.Zb(602,"\n\n    "),a.Jb(603,"span",19),a.Zb(604,"print"),a.Ib(),a.Jb(605,"span",18),a.Zb(606,"("),a.Ib(),a.Jb(607,"span",20),a.Zb(608,"'yellow'"),a.Ib(),a.Jb(609,"span",18),a.Zb(610," not in "),a.Ib(),a.Jb(611,"span",20),a.Zb(612,"color"),a.Ib(),a.Jb(613,"span",18),a.Zb(614,")"),a.Ib(),a.Zb(615,"\n"),a.Ib(),a.Ib(),a.Jb(616,"h3",7),a.Zb(617,"Output:"),a.Ib(),a.Jb(618,"div",8),a.Jb(619,"p"),a.Zb(620," True "),a.Fb(621,"br"),a.Zb(622," False "),a.Fb(623,"br"),a.Zb(624," True "),a.Ib(),a.Ib(),a.Ib(),a.Jb(625,"div",6),a.Jb(626,"h3",7),a.Zb(627,"7. Identity Operators:"),a.Ib(),a.Jb(628,"div",8),a.Jb(629,"p"),a.Zb(630," Identity operators are used to determine whether a value is of a certain variable contains. "),a.Ib(),a.Ib(),a.Jb(631,"div",10),a.Jb(632,"table",11),a.Jb(633,"tbody"),a.Jb(634,"tr"),a.Jb(635,"th"),a.Zb(636,"Sr.No."),a.Ib(),a.Jb(637,"th"),a.Zb(638,"Operators"),a.Ib(),a.Jb(639,"th"),a.Zb(640,"Meaning"),a.Ib(),a.Ib(),a.Jb(641,"tr"),a.Jb(642,"td"),a.Zb(643,"1"),a.Ib(),a.Jb(644,"td"),a.Zb(645,"is"),a.Ib(),a.Jb(646,"td"),a.Zb(647," It returns True if both the operand point to point to same memory location. "),a.Ib(),a.Ib(),a.Jb(648,"tr"),a.Jb(649,"td"),a.Zb(650,"2"),a.Ib(),a.Jb(651,"td"),a.Zb(652,"not is"),a.Ib(),a.Jb(653,"td"),a.Zb(654," It returns True if both the operand point to different memory location. "),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Jb(655,"h3",7),a.Zb(656,"Example:"),a.Ib(),a.Jb(657,"div",14),a.Jb(658,"pre"),a.Zb(659,"    "),a.Jb(660,"span",15),a.Zb(661,"# Identity operators"),a.Ib(),a.Zb(662,"\n    "),a.Jb(663,"span",16),a.Zb(664,"color1"),a.Ib(),a.Jb(665,"span",17),a.Zb(666,"="),a.Ib(),a.Jb(667,"span",16),a.Zb(668,"["),a.Ib(),a.Jb(669,"span",18),a.Zb(670,"'red'"),a.Ib(),a.Jb(671,"span",16),a.Zb(672,","),a.Ib(),a.Jb(673,"span",18),a.Zb(674,"'blue'"),a.Ib(),a.Jb(675,"span",16),a.Zb(676,","),a.Ib(),a.Jb(677,"span",18),a.Zb(678,"'green'"),a.Ib(),a.Jb(679,"span",16),a.Zb(680,"]"),a.Ib(),a.Zb(681,"\n    "),a.Jb(682,"span",16),a.Zb(683,"color2"),a.Ib(),a.Jb(684,"span",17),a.Zb(685,"="),a.Ib(),a.Jb(686,"span",16),a.Zb(687,"["),a.Ib(),a.Jb(688,"span",18),a.Zb(689,"'red'"),a.Ib(),a.Jb(690,"span",16),a.Zb(691,","),a.Ib(),a.Jb(692,"span",18),a.Zb(693,"'blue'"),a.Ib(),a.Jb(694,"span",16),a.Zb(695,","),a.Ib(),a.Jb(696,"span",18),a.Zb(697,"'green'"),a.Ib(),a.Jb(698,"span",16),a.Zb(699,"]"),a.Ib(),a.Zb(700,"\n    "),a.Jb(701,"span",16),a.Zb(702,"color3"),a.Ib(),a.Jb(703,"span",17),a.Zb(704,"="),a.Ib(),a.Jb(705,"span",16),a.Zb(706,"color1"),a.Ib(),a.Zb(707,"\n\n    "),a.Jb(708,"span",19),a.Zb(709,"print"),a.Ib(),a.Jb(710,"span",18),a.Zb(711,"("),a.Ib(),a.Jb(712,"span",20),a.Zb(713,"color1"),a.Ib(),a.Jb(714,"span",18),a.Zb(715," is "),a.Ib(),a.Jb(716,"span",20),a.Zb(717,"color2"),a.Ib(),a.Jb(718,"span",18),a.Zb(719,")"),a.Ib(),a.Zb(720,"\n\n    "),a.Jb(721,"span",19),a.Zb(722,"print"),a.Ib(),a.Jb(723,"span",18),a.Zb(724,"("),a.Ib(),a.Jb(725,"span",20),a.Zb(726,"color1"),a.Ib(),a.Jb(727,"span",18),a.Zb(728," is "),a.Ib(),a.Jb(729,"span",20),a.Zb(730,"color3"),a.Ib(),a.Jb(731,"span",18),a.Zb(732,")"),a.Ib(),a.Zb(733,"\n\n    "),a.Jb(734,"span",19),a.Zb(735,"print"),a.Ib(),a.Jb(736,"span",18),a.Zb(737,"("),a.Ib(),a.Jb(738,"span",20),a.Zb(739,"color1"),a.Ib(),a.Jb(740,"span",18),a.Zb(741," not is "),a.Ib(),a.Jb(742,"span",20),a.Zb(743,"color2"),a.Ib(),a.Jb(744,"span",18),a.Zb(745,")"),a.Ib(),a.Ib(),a.Ib(),a.Jb(746,"h3",7),a.Zb(747,"Output:"),a.Ib(),a.Jb(748,"div",8),a.Jb(749,"p"),a.Zb(750," False "),a.Fb(751,"br"),a.Zb(752," True"),a.Fb(753,"br"),a.Zb(754," True "),a.Ib(),a.Ib(),a.Ib(),a.Jb(755,"div",6),a.Jb(756,"h3",7),a.Zb(757,"8. Modulus Operators:"),a.Ib(),a.Jb(758,"div",8),a.Jb(759,"ul"),a.Jb(760,"li"),a.Zb(761," The "),a.Jb(762,"span",12),a.Zb(763,"% "),a.Ib(),a.Zb(764,"operator that gives the remainder from the division of first argument by second "),a.Ib(),a.Jb(765,"li"),a.Zb(766," The "),a.Jb(767,"span",12),a.Zb(768,"// "),a.Ib(),a.Zb(769,"operator is used for floor division returns the integral part of the quotient. "),a.Ib(),a.Ib(),a.Ib(),a.Jb(770,"h3",7),a.Zb(771,"Example:"),a.Ib(),a.Jb(772,"div",14),a.Jb(773,"pre"),a.Zb(774,"    "),a.Jb(775,"span",16),a.Zb(776,"a"),a.Ib(),a.Jb(777,"span",17),a.Zb(778,"="),a.Ib(),a.Jb(779,"span",16),a.Zb(780,"10"),a.Ib(),a.Zb(781,"\n    "),a.Jb(782,"span",16),a.Zb(783,"b"),a.Ib(),a.Jb(784,"span",17),a.Zb(785,"="),a.Ib(),a.Jb(786,"span",16),a.Zb(787,"3"),a.Ib(),a.Zb(788,"\n    "),a.Jb(789,"span",16),a.Zb(790,"c"),a.Ib(),a.Jb(791,"span",17),a.Zb(792,"="),a.Ib(),a.Jb(793,"span",16),a.Zb(794,"a"),a.Ib(),a.Jb(795,"span",12),a.Zb(796,"%"),a.Ib(),a.Jb(797,"span",16),a.Zb(798,"b"),a.Ib(),a.Zb(799,"\n    "),a.Jb(800,"span",19),a.Zb(801,"print"),a.Ib(),a.Jb(802,"span",18),a.Zb(803,"("),a.Ib(),a.Jb(804,"span",20),a.Zb(805,"c"),a.Ib(),a.Jb(806,"span",18),a.Zb(807,")"),a.Ib(),a.Zb(808,"\n\n    "),a.Jb(809,"span",16),a.Zb(810,"a"),a.Ib(),a.Jb(811,"span",17),a.Zb(812,"="),a.Ib(),a.Jb(813,"span",16),a.Zb(814,"10.33"),a.Ib(),a.Zb(815,"\n    "),a.Jb(816,"span",16),a.Zb(817,"b"),a.Ib(),a.Jb(818,"span",17),a.Zb(819,"="),a.Ib(),a.Jb(820,"span",16),a.Zb(821,"3.3"),a.Ib(),a.Zb(822,"\n    "),a.Jb(823,"span",16),a.Zb(824,"c"),a.Ib(),a.Jb(825,"span",17),a.Zb(826,"="),a.Ib(),a.Jb(827,"span",16),a.Zb(828,"a"),a.Ib(),a.Jb(829,"span",12),a.Zb(830,"//"),a.Ib(),a.Jb(831,"span",16),a.Zb(832,"b"),a.Ib(),a.Zb(833,"\n    "),a.Jb(834,"span",19),a.Zb(835,"print"),a.Ib(),a.Jb(836,"span",18),a.Zb(837,"("),a.Ib(),a.Jb(838,"span",20),a.Zb(839,"c"),a.Ib(),a.Jb(840,"span",18),a.Zb(841,")"),a.Ib(),a.Ib(),a.Ib(),a.Jb(842,"h3",7),a.Zb(843,"Output:"),a.Ib(),a.Jb(844,"div",8),a.Jb(845,"p"),a.Zb(846,"1"),a.Fb(847,"br"),a.Zb(848,"3.0"),a.Ib(),a.Ib(),a.Ib(),a.Jb(849,"div",6),a.Jb(850,"h3",7),a.Zb(851,"9. String Operators:"),a.Ib(),a.Jb(852,"div",8),a.Jb(853,"ul"),a.Jb(854,"li"),a.Zb(855,"String is a collection of characters."),a.Ib(),a.Jb(856,"li"),a.Zb(857," In Python it is possible to perform the concatenation and repetition operations on strings using the operators like"),a.Jb(858,"span",12),a.Zb(859," + "),a.Ib(),a.Zb(860,"and"),a.Jb(861,"span",12),a.Zb(862,"*"),a.Ib(),a.Zb(863,". "),a.Ib(),a.Ib(),a.Ib(),a.Jb(864,"h3",7),a.Zb(865,"Example:"),a.Ib(),a.Jb(866,"div",14),a.Jb(867,"pre"),a.Zb(868,"    "),a.Jb(869,"span",16),a.Zb(870,"str1"),a.Jb(871,"span",17),a.Zb(872,"="),a.Ib(),a.Zb(873,'"My"'),a.Ib(),a.Zb(874,"\n    "),a.Jb(875,"span",16),a.Zb(876,"str2"),a.Jb(877,"span",17),a.Zb(878,"="),a.Ib(),a.Zb(879,'"String"'),a.Ib(),a.Zb(880,"\n    "),a.Jb(881,"span",19),a.Zb(882,"print"),a.Ib(),a.Jb(883,"span",18),a.Zb(884,"("),a.Ib(),a.Jb(885,"span",20),a.Zb(886,"str1"),a.Ib(),a.Jb(887,"span",17),a.Zb(888,"+"),a.Ib(),a.Jb(889,"span",20),a.Zb(890,"str2"),a.Ib(),a.Jb(891,"span",18),a.Zb(892,")"),a.Ib(),a.Zb(893,"\n    "),a.Jb(894,"span",19),a.Zb(895,"print"),a.Ib(),a.Jb(896,"span",18),a.Zb(897,"("),a.Ib(),a.Jb(898,"span",20),a.Zb(899,"str2"),a.Ib(),a.Jb(900,"span",17),a.Zb(901,"*"),a.Ib(),a.Jb(902,"span",20),a.Zb(903,"3"),a.Ib(),a.Jb(904,"span",18),a.Zb(905,")"),a.Ib(),a.Ib(),a.Ib(),a.Jb(906,"h3",7),a.Zb(907,"Output :"),a.Ib(),a.Jb(908,"div",8),a.Jb(909,"p"),a.Zb(910," My"),a.Fb(911,"br"),a.Zb(912," String"),a.Fb(913,"br"),a.Zb(914," MyString"),a.Fb(915,"br"),a.Zb(916," StringStringString "),a.Ib(),a.Ib(),a.Ib(),a.Ib(),a.Ib()}},directives:[J.a,n.a],styles:[""]}),b})()}];let s=(()=>{class b{}return b.\u0275mod=a.Cb({type:b}),b.\u0275inj=a.Bb({factory:function(t){return new(t||b)},imports:[[r.h.forChild(Z)],r.h]}),b})();var o=e("VD3N");let i=(()=>{class b{}return b.\u0275mod=a.Cb({type:b}),b.\u0275inj=a.Bb({factory:function(t){return new(t||b)},imports:[[I.c,s,o.PythonModule]]}),b})()}}]);